nohup: ignoring input
Train data
Class1
/root/ubuntu/ML Assignment/Assignment3/basecode/script.py:301: DeprecationWarning: Use of `minimize` with `x0.ndim != 1` is deprecated. Currently, singleton dimensions will be removed from `x0`, but an error will be raised in SciPy 1.11.0.
  nn_params = minimize(blrObjFunction, initialWeights, jac=True, args=args, method='CG', options=opts)
0.020318287318767624
Class2
0.020318619939394184
Class3
0.061664313552276924
Class4
0.07502453350633469
Class5
0.04387855436350498
Class6
0.08220938618271173
Class7
/root/ubuntu/ML Assignment/Assignment3/basecode/script.py:301: DeprecationWarning: Use of `minimize` with `x0.ndim != 1` is deprecated. Currently, singleton dimensions will be removed from `x0`, but an error will be raised in SciPy 1.11.0.
  nn_params = minimize(blrObjFunction, initialWeights, jac=True, args=args, method='CG', options=opts)
0.03378729942351107
Class8
0.0434569028834434
Class9
0.11017974345116058
Class10
/root/ubuntu/ML Assignment/Assignment3/basecode/script.py:301: DeprecationWarning: Use of `minimize` with `x0.ndim != 1` is deprecated. Currently, singleton dimensions will be removed from `x0`, but an error will be raised in SciPy 1.11.0.
  nn_params = minimize(blrObjFunction, initialWeights, jac=True, args=args, method='CG', options=opts)
0.09632613403003294

 Training set Accuracy:92.752%
[[4816    1   10    7    7   17   25    6   32    2]
 [   1 5619   26   11    4   17    3   10   44    7]
 [  34   36 4526   64   49   19   48   60  108   14]
 [  20   22  115 4607    8  141   18   44  105   51]
 [   9   19   20    6 4550   10   26   12   49  141]
 [  42   19   32  127   41 3904   81   18  109   48]
 [  23   13   29    3   23   64 4734    2   25    2]
 [  11   21   51   11   42   11    4 4966   12  136]
 [  40  109   55  117   29  124   32   20 4243   82]
 [  24   20   13   82  159   32    1  160   47 4411]]

 Validation set Accuracy:91.45%
[[975   0   1   2   0   8   5   1   6   2]
 [  0 969   4   1   1   9   0   1  13   2]
 [ 11  16 880  22  14   5  11  12  24   5]
 [  4  12  28 885   2  27   4  11  13  14]
 [  1   6   7   2 940   1   7   0   7  29]
 [  8   7   9  41  20 866  18   2  20   9]
 [  7   3   6   0   5  12 958   2   7   0]
 [  2   5   9   1  14   2   0 923   4  40]
 [ 16  27  21  27   9  24  18   4 845   9]
 [ 10   3   5  19  23   5   1  27   3 904]]

 Testing set Accuracy:91.93%
[[ 961    0    1    2    1    4    5    4    1    1]
 [   0 1113    3    2    0    1    4    1   11    0]
 [   8   10  919   19   11    4   12   12   33    4]
 [   4    1   17  921    3   19    4   13   19    9]
 [   1    2    4    4  914    0   11    2    5   39]
 [  10    2    1   42   11  764   16    8   30    8]
 [   9    4    7    2    5   19  908    1    3    0]
 [   2   11   21    6    8    2    1  948    2   27]
 [  13   14    7   22   14   28    8   10  846   12]
 [   8    8    1   12   32   11    1   23   14  899]]
Test data
Class1
/root/ubuntu/ML Assignment/Assignment3/basecode/script.py:346: DeprecationWarning: Use of `minimize` with `x0.ndim != 1` is deprecated. Currently, singleton dimensions will be removed from `x0`, but an error will be raised in SciPy 1.11.0.
  nn_params = minimize(blrObjFunction, initialWeights, jac=True, args=args, method='CG', options=opts)
0.0012574521564632064
Class2
0.0013210380322331513
Class3
0.045369833759143545
Class4
0.03948088431805026
Class5
0.012724818957409413
Class6
0.057337821627749336
Class7
0.010530178658331406
Class8
0.020844343071110338
Class9
0.08238905306935958
Class10
0.07520918564935941
Train data
/root/ubuntu/ML Assignment/Assignment3/basecode/script.py:373: DeprecationWarning: Use of `minimize` with `x0.ndim != 1` is deprecated. Currently, singleton dimensions will be removed from `x0`, but an error will be raised in SciPy 1.11.0.
  nn_params = minimize(mlrObjFunction, initialWeights_b, jac=True, args=args_b, method='CG', options=opts_b)
Multi class
12093.67924009724

 Training set Accuracy:93.34%
[[4782    1    9    6   12   36   33    8   32    4]
 [   1 5609   27   14    5   19    2   10   45   10]
 [  23   45 4505   73   54   23   61   56  103   15]
 [  18   21   92 4651    4  153   17   37   95   43]
 [   9   23   22    3 4544    7   46   13   26  149]
 [  40   17   37  110   30 3979   66   16   90   36]
 [  23   11   27    1   24   56 4755    2   17    2]
 [   7   20   46   18   36   11    4 4968   14  141]
 [  24   93   42  112   18  120   27   13 4348   54]
 [  20   22   11   59  119   30    2  123   34 4529]]

 Validation set Accuracy:92.49000000000001%
[[976   0   1   3   1   6   4   2   6   1]
 [  0 976   3   1   1   6   0   1   9   3]
 [  8  15 893  20  12   5  14  11  18   4]
 [  1   7  20 902   2  29   2  14  12  11]
 [  1   4   8   2 938   1  10   1   7  28]
 [  8   4   6  34  17 892  13   2  19   5]
 [  7   1   6   1   7  11 960   1   5   1]
 [  3   4   9   1  10   0   0 925   3  45]
 [ 11  20  17  27  11  23  21   3 862   5]
 [  4   5   4  13  20   4   1  20   4 925]]

 Testing set Accuracy:92.47%
[[ 959    0    1    3    0    6    6    4    1    0]
 [   0 1110    3    2    0    1    4    2   13    0]
 [   7    9  924   15    9    5   14   10   35    4]
 [   4    1   18  917    0   24    4   11   23    8]
 [   1    2    6    1  914    0   10    5    9   34]
 [  10    2    2   35   10  775   15    7   29    7]
 [  10    3    4    2    7   14  914    3    1    0]
 [   1   10   20    7    8    2    0  946    1   33]
 [   8    9    6   24    9   24   11    8  863   12]
 [  11    8    1    8   24    7    0   18    7  925]]
Test data
/root/ubuntu/ML Assignment/Assignment3/basecode/script.py:415: DeprecationWarning: Use of `minimize` with `x0.ndim != 1` is deprecated. Currently, singleton dimensions will be removed from `x0`, but an error will be raised in SciPy 1.11.0.
  nn_params = minimize(mlrObjFunction, initialWeights_b, jac=True, args=args_b, method='CG', options=opts_b)
1212.3748609522747
No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.
